version: '3.8'

services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: usuarios
    ports:
      - "3309:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: always  # Add restart policy

  apiread:
    build:
      context: ./apiread
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  apiwrite:
    build:
      context: ./apiwrite
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./apiwrite/src:/var/www/html
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "9000:80"
    volumes:
      - ./frontend/src:/usr/share/nginx/html  # Mount the frontend source code
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf # Mount the nginx config
    depends_on:
      - apiread
      - apiwrite
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge